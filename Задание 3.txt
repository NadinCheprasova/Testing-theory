    • Что такое функциональное тестирование (functional/ behavioral testing)?
Функциональное тестирование (functional testing) – это вид тестирования, направленный на проверку корректности работы функциональности приложения (корректность реализации функциональных требований). 
Функциональное тестирование проверяет ЧТО делает продукт, оно проводится на основании бизнес-требований, проверяет соответствие фактического результата ожидаемому результату, имитирует фактическое использование системы. (Как работает продукт с точки зрения функционала?)

    • Что такое нефункциональное тестирование (non-functional testing)?
Нефункциональное тестирование (non-functional testing) – это вид тестирования, направленный на проверку нефункциональных особенностей приложения (корректность реализации нефункциональных требований).  Нефункциональное тестирование проверяет поведение приложения, проводится на основании ожиданий заказчика.  (Как работает продукт с точки зрения бизнеса, удобства для пользователя?)

    • Какие виды тестирования относятся к функциональному тестированию?
К функциональному тестированию относятся: модульное, интеграционное, системное, приемочное, дымовое, регрессия, ре-тест, санитарное

    • Какие виды тестирования относятся к нефункциональному тестированию?
К нефункциональному тестированию относятся: инсталляционное, тестировании производительности, нагрузочное, стрессовое, тестирование безопасности, удобства использования, интерфейса, доступности, совместимости и т.д. 
 
    • Что такое статическое/динамическое тестирования?
Статическое тестировании (static testing) – это процесс анализа программного кода, документации и других артефактов разработки без запуска кода на исполнение. Целью статического тестирования является выявление ошибок на ранних стадиях разработки, что позволяет сэкономить время и ресурсы. 
Статическое тестирование может включать ревизию кода, проверку стиля кода, тестирование требований к системе, проверка тест-кейсов, описания архитектуры приложения, схемы БД, графических прототипов, параметров (настройки) среды исполнения приложения, подготовленных тестовых данных. 

Динамическое тестирование (dynamic testing) – это процесс проверки ПО путем его выполнения. Целью динамического тестирования является выявление ошибок в рабочем ПО и проверка его функциональности, проверка реального поведения приложения (его части).  Может запускаться как код всего приложения целиком (системное тестирование), так и код нескольких взаимосвязанных частей (интеграционное тестирование), отдельных частей (компонентное тестирование) и даже отдельных участков кода.
 
    • Что такое тестирование методом черного/серого/белого ящика (white/black/grey box testing)?
Метод черного ящика (black box testing) – тестирование без знания внутренней структуры компонента или системы. Это стратегия, в которой тестирование основано исключительно на требованиях и спецификациях. Данная техника применима на разных уровнях тестирования- модульном, интеграционном и системном. При данной технике мы запускаем программу и смотрим, что она делает. 

Метод белого ящика (white box testing) – тестирование, основанное на анализе внутренней структуры компонента или системы (есть доступ к внутренней структуре и коду системы, а также есть достаточно знаний для понимания увиденного). Данная техника применима на разных уровнях тестирования- модульном, интеграционном и системном, но чаще применяется для unit-тестирования участка кода самим разработчиком. При тестировании данным методом не требуется запуск кода.

Метод серого ящика (grey box testing) – это тестирование, основанное на комбинации методов белого и черного ящиков: есть доступ к части кода и архитектуры, а к части – нет доступа.
(примеры: тестирование с проверкой корректности записей в БД; работа с логами и метриками для поиска корневой причины).

    • Что такое компонентное (component or unit)/ интеграционное (integration testing) тестирование?
Компонентное тестирование (component or unit) – это процесс тестирования наименьшей функциональной единицы кода отдельно, без интеграции с другими компонентами. 

Интеграционное тестирование (integration testing) предназначено для проверки связи между компонентами, а также взаимодействия с различными частями системы.

    • Что такое системное (system testing)/ приемочное тестирование (acceptance testing)?
Системное тестирование (system testing) – проверка всего приложения как единого целого, собранного из частей, проверенных на двух предыдущих стадиях. Включает в себя проверку функциональных и нефункциональных требований. Проводится на максимально приближенном к релизу окружении. 

Приемочное тестирование (acceptance testing) – это вид тестирования, проводимый на этапе сдачи готового продукта (или готовой части продукта) заказчику. Выполняется на основании набора типичных тестовых случаев и сценариев, разработанных на основании требований к данному приложению. 

    • Что такое позитивное/негативное тестирование?
Позитивное тестирование (positive testing) – это тестирование с применением сценариев, которые соответствуют нормальному (штатному, ожидаемому) поведению системы. С его помощью мы можем определить, что система делает то, для чего и была создана.

Негативное тестировании (negative testing) – это тестирование, в рамках которого применяются сценарий, которые соответствуют внештатному поведению тестируемой системы. Это могут быть исключительные ситуации или неверные данные. Негативное тестирование направлено на проверку устойчивости системы различным воздействиям, валидации неверных данных, обработку исключительных ситуаций.
Негативные проверки могут дать 2 результата:
    • На данный ввод у продукта есть ответ в виде сообщения/ контроля
    • Система не знает, как реагировать на введенные данные

    • Что такое альфа/бета тестирование (Alpha/Beta testing)?
Альфа тестирование (alpha testing) – это внутреннее приемочное тестирование ПО, выполняемое на ранних этапах разработки. Обычно оно проводится силами команды разработчиков продукта. 

Бета тестирование (beta testing) – это следующий этап после альфа-тестирования. Это процесс, когда еще незавершенный или недостаточно протестированный продукт предоставляется ограниченной группе пользователей для проверки его функциональности, устранения ошибок и получения обратной связи перед его официальным запуском на рынке. 

    • Что такое интуитивное (ad hoc testing)/исследовательское тестирование (exploratory testing)? 
Интуитивное тестирование, свободное (ad hoc testing) – это вид тестирования, который выполняется без подготовки к тестированию продукта, без определения ожидаемых результатов, проектирования тестовых сценариев. Это неформальное, импровизационное тестирование. Оно не требует никакой документации, планирования, процессов, которых следует придерживаться при выполнении тестирования. 

Исследовательское тестирование (exploratory testing) – это частично формализованный подход, в рамках которого тестировщик выполняет работу с продуктом по выбранному сценарию, который, в свою очередь, дорабатывается в процессе выполнения с целью более полного исследования приложения. Это разработка и выполнение тестов в одно и то же время.

    • Что такое дымовое/санитарное/регрессионное тестирование/ре-тест (smoke/ sanity/regression/retest)?

Дымовое тестирование (smoke testing) – это короткий цикл тестов самой главной, самой важной , самой ключевой функциональности, неработоспособность которой, делает бессмысленной саму идею использования приложения или системы. Это тестирование, направленное вширь проверяемой функции, проверка основных пользовательских требований, быстрое, поверхностное тестирование на общую работоспособность продукта. 

Санитарное тестирование (sanity testing) – узконаправленное тестирование достаточное для доказательства того, что конкретная функция работает согласно заявленным в спецификации требованиям. Санитарное тестирование направлено вглубь проверяемой функции. 

Регрессионное тестирование (regression testing) – это вид тестирования, направленный на проверку изменений, сделанных в приложении или окружающей среде (починка дефекта, слияние кода, миграция на другую ОС, БД, веб сервер или сервер приложений) для подтверждения того факта, что существующая ранее функциональность работает как прежде. 
Это проверка работоспособности приложения после внесения модификации и доработок. 

Ре-тест (re-test) – процедура повторной проверки отдельных тест-кейсов, при выполнении которых ранее были обнаружены баги для проверки их устранения.

    • Что такое тестирование нового функционала/ приемочное тестирование?
Тестирование нового функционала – процесс проверки нового, добавляемого функционала ПО на соответствие предъявляемым к нему требованиям.  

    • Что такое ручное/ автоматизированное/ полуавтоматизированное тестирование?
Ручное тестирования (manual testing) – это вид тестирования ПО, при котором тест-кейсы выполняются тестировщиком вручную, без использования каких-либо средств автоматизации. 

Автоматизирование тестирование (automated testing) – это метод тестирования ПО, который предполагает использование инструментов и фреймворков автоматизации для выполнения одного и того же набора тест-кейсов снова и снова. 

Полуавтоматизированное тестирование (semi automated testing) – это вариант ручного тестирования с частичным использованием средств автоматизации. 

    • На основании чего происходит разработка тестовых сценариев?
Тестовые сценарии разрабатываются на основе требований к продукту (SRS) и бизнес требований (BRS). 

    • Что такое Frontend/Backend?
Frontend (внешний интерфейс) – видимая часть цифрового продукта: клиентская часть веб-приложений, сайтов, которая взаимодействует с пользователем. 

Backend (серверная часть) – программно-аппаратная составляющая продукта, скрытая от глаз пользователя. Она включает разработку серверной части веб-приложений и сайтов. Она отвечает за работу баз данных, серверов и логику, которая происходит на серверной стороне.  

    • Что такое тестирование безопасности?
Тестирование безопасности (security testing) – это процесс проверки ПО на наличие уязвимостей, (угроз и рисков), которые могут быть использованы злоумышленниками для получения несанкционированного доступа к системе или данным. 

    • Перечислите принципы безопасности ПО
Принципы безопасности ПО:
    • Конфиденциальность – сокрытие определенных ресурсов или информации;
    • Целостность – ресурс может быть изменен только в соответствии с полномочиями пользователя
    • Доступность – ресурсы должны быть доступны только авторизованному пользователю, внутреннему объекту или устройству. 

    • Перечислите виды уязвимостей в безопасности ПО
1. Инъекции
2. Проблемы аутентификации и проверки сессий
3. XSS (межсайтовые сценарии)
4. Проблемы контроля доступа
5. Неверная конфигурация
6. Незащищенные конфиденциальные данные
7. Недостаточная защита от атак
8. Уязвимости CSRF (подделка межсайтовых запросов)
9. Использование компонентов с уязвимостями
10. Незащищенные API

    • Что такое тестирование на отказ и восстановление (Failover and recovery testing)?
Тестирование на отказ и восстановление (failover and recovery testing) – проверяет тестируемый продукт с точки зрения способности противостоять и успешно восстанавливаться после возможных сбоев, возникших в связи с ошибками ПО, отказами оборудования или проблемами связи (например, отказ сети).  

    • Что такое тестирование эффективности использования ресурсов?
Тестирование эффективности использования ресурсов – это процесс проверки ПО на предмет того, как оно использует системные ресурсы, такие как процессор, память, дисковое пространство и сетевую пропускную способность. 

    • Что такое тестирование масштабируемости (Scalability testing)?
Тестирование масштабируемости (Scalability testing) – это вид тестирования, при котором анализируется производительность приложения (сайта) с точки зрения способности масштабироваться (приспосабливаться), реагируя на увеличение/ уменьшение количества пользовательских запросов и других динамических параметров системы. Масштабируемость приложения означает его способность беспроблемно обработать изменение условий, в которых работает система: увеличение трафика, объемов принимаемых данных, рост количества транзакций в БД и т.д. Масштабируемость приложения – его умение «расти и расширяться».

    • Что такое тестирование производительности (Performance testing)?
Тестирование производительности (performance testing) – это исследование показателей скорости реакции приложения на внешние воздействия при различной по характеру и интенсивности нагрузке. 

    • Что такое тестирование надежности (Reliability testing)?
Тестирование надежности (reliability testing) – тестирование способности продукта выполнять свои функции в заданных условиях на протяжении заданного времени или заданного количества операций (Вероятность безотказной работы ПО в течение определенного периода времени в определенной среде). 

    • Что такое тестирование стабильности (Stability testing)?
Тестирование стабильности (stability testing) – это тестирование на выносливость, включает в себя тестирование системы со значительной нагрузкой в течение длительного периода времени. 

    • Что такое тестирование удобства использования (Usability testing)?
Тестирование удобства использования (usability testing) – это метод тестирования, направленный на определение степени понятности, легкости в изучении и использовании, привлекательности программного продукта для пользователя при условии использования в заданных условиях эксплуатации.   

    • Что такое тестирование локализации/ совместимости/ адаптивности (localization/ compatibility/adaptability testing)?
Тестирование локализации (localization testing) – это процесс проверки работы продукта в условиях конкретной локали (языка, региона, культуры), чтобы обеспечить его корректное функционирование в соответствии требованиям пользователя. 

Тестирование совместимости (compatibility testing) – это проверка способности приложения работать в указанном окружении (совместимость с аппаратной платформой, операционной системой и сетевой инфраструктурой, с браузерами и их версиями, с мобильными устройствами. 

Тестирование адаптивности (adaptability testing) – это тестирование того, насколько ваше приложение или веб-сайт корректно отображается и функционирует на различных устройствах, разрешениях экрана и ориентациях. 

    • Что такое ETL-тестирование/ тестирование перед миграцией (pre-migration testing)/ миграционное тестирование (migration testing)/ тестирование после миграции (post-migration)?

ETL-тестирование – это проверка процессов извлечения, трансформации и загрузки данных в хранилище. Это совсем не тестирование БД. Это тестирование, выполняемое для гарантии того, что данные, перенесенные из исходного в целевое хранилище, являются точными и соответствуют действующим правилам преобразования. 

Тестирование перед миграцией (pre-migration testing) – это объем работ включающий следующее:
        ◦ Установите четкий объем данных – какие данные следует включить, какие данные следует исключить, какие данные требуют преобразования и т.д.;
        ◦ Выполнение сопоставление данных (data mapping) – для каждого типа данных в устаревшем приложении сравните соответствующий тип в новом приложении, а затем сопоставьте их – сопоставление более высокого уровня (Higher level mapping);
        ◦ Изучите схему данных нового приложения – имена полей, типы, минимальные и максимальные значения, длину обязательные поля, проверки на уровне полей и т.д.;
        ◦ Изучите интерфейсы в новом приложении и их подключения. Данные, проходящие через интерфейс, должны быть надежно защищены и настроены;
        ◦ Подготовьте тестовые случаи, тестовые сценарии и используйте их для новых условий в новых приложениях;
        ◦ Выполните набор тестовых случаев с набором пользователей и сохраните результаты, журналы. То же самое необходимо проверить после того, как произошла миграция, чтобы убедиться, что устаревшие данные и функциональности не повреждены;
        ◦ Количество данных и записей должно быть четко записано, это необходимо проверить после миграции, чтобы доказать, что никакие данные не были потеряны. 
 
Миграционное тестирование (migration testing) – во время этого тестирования все компоненты среды обычно отключаются и удаляются из сети для выполнения действий по миграции, фиксируется время, необходимое для миграции системы, а также время простоя, необходимое для теста миграции. В идеале оба времени должны совпадать. 
Проверяется следующее: 
    • фактическая миграция приложения;
    • изменение брандмауэров, портов, хостов, аппаратных и программных конфигураций;
    • проверки безопасности
    • проверка связности между всеми компонентами приложения. 

Тестирование после миграции (post-migration) – выполняется сквозное тестирование в тестовой среде. Выполняются определенные тестовые наборы, тестовые сценарии, варианты использования с устаревшими данными, а также с новым набором данных. 

