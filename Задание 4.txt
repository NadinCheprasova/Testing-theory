•	Что такое тест дизайн?
Тест-дизайн — это процесс разработки техник и методов тестирования ПО, который позволяет, используя определенные техники, создать оптимальное тестовое покрытие тестируемого объекта.
Цель тест-дизайна - создать максимально эффективный набор кейсов, покрывающий наиболее важные аспекты тестируемого ПО, т.е. минимизировать количество тестов, необходимых для нахождения большинства серьезных ошибок.
Техники тест-дизайна помогают понять, что и как тестировать. 

•	Для чего нужны техники тест дизайна?
— когда тестирование включает в себя множество однотипных действий,
— когда необходим вдумчивый подход к тестированию для избежания лишних трат времени и финансов,
— чтобы разработать тесты, которые обнаружат наиболее серьезные ошибки,
— чтобы минимизировать количество необходимых тестов для проверки продукта.

•	Что такое классы эквивалентности (equivalence class)?
Класс эквивалентности (equivalence class) – это набор входных (или выходных) данных ПО, которые обрабатываются программой по одному алгоритму или приводят к одному результату.

•	Что такое граничные значения (boundary values)?
Граничные значения (boundary values) - значения диапазона входных данных, при которых меняется поведение приложения, это те места, в которых один класс эквивалентности переходит в другой.  Это соседние значения диапазона, но относящиеся в разным классам эквивалентности. 

•	Что такое таблица принятия решений (decision table)?
Таблица принятия решений (decision table) – техника, помогающая наглядно изобразить комбинаторику условий из ТЗ.  Таблица принятия решений полезна там, где есть требования, которые описывают несколько разных исходов ситуации в зависимости от условий. 
Преимущества: наглядность, удобство, простота
Недостатки: времязатратно 

•	Что такое попарное тестирование (pairwise testing)?
Попарное тестирование (pairwise testing) – это техника тест-дизайна, при которой тест-кейсы создаются таким образом, чтобы выполнить все возможные отдельные комбинации каждой пары входных параметров.   
Попарное тестирование опирается на 2 принципы: 
—	Дефекты проявляются чаще при сочетании двух параметров, чем трех и более. 
—	Каждый конкретный тестовый случай может проверять более одной уникальной пары

•	Перечислите методы комбинаторного тестирования.
Это техники, позволяющие выделить подгруппу тестовых комбинаций при тестировании объекта с множественными параметрами в случаях, когда эти параметры состоят из нескольких значений и это приводит к появлению большого числа комбинаций, которые нужно протестировать. 
Цель комбинаторных техник тест дизайна – создавать комбинации входных параметров на основе одного из алгоритмов. 
—	Метод полного перебора (exhaustive testing) - исчерпывающее тестирование с использованием в качестве входящих данных все возможные комбинации параметров.
—	Тестирование каждого выбора (Each choice testing). Каждое значение каждого конкретного параметра должно использоваться хотя бы один раз в тестовом наборе. Таким образом, результирующее количество комбинаций будет равно количеству значений параметра с наибольшим диапазоном. 
—	 Тестирование базового выбора (Base choice testing). Определение базовых значений для каждого параметра, на основе которых создаются тест кейсы, дополняемые другими значениями. Базовые значения фиксируются как обязательные в каждом тест кейсе. 

