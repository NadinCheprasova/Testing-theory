    • Что такое тестирование ПО?
Тестирование ПО – процесс проверки ПО на соответствие требованиям. Это проверка соответствия между реальным и ожидаемым поведением программы, осуществляемое на конечном наборе тестов, выбранном определенным образом с целью проверки на соответствие описанным требованиям и заявленным целям и для своевременного выявления дефектов. 

    • Что такое качество ПО?
Качество ПО – совокупность характеристик ПО, относящихся к его способности удовлетворять установленные заранее предполагаемые потребности.

    • Когда начинать и заканчивать тестирование?
Начинать тестирование можно, как только это становится возможным. Можно начать с анализа требований, спецификаций и бизнес-случаев. 

Эвристики окончания тестирования:
1. Эвристика «время вышло». Мы останавливаем тестирование, когда заканчивается выделенное на него время.

2. Эвристика пеньяты. Мы останавливаем тестирование, когда видим первую достаточно серьезную проблему.

3. Эвристика «мёртвой лошади». В программе слишком много ошибок, так что продолжение тестирования не имеет смысла.

4. Эвристика «задание выполнено». Мы останавливаем тестирование, когда найдены ответы на все поставленные вопросы.

5. Эвристика «отмена задания». Заказчик попросил остановить тестирование. Это может произойти по причине перерасхода бюджета, или вследствие отмены проекта, или по любой другой причине.

6. Эвристика «я зашел в тупик». Остановка тестирования по причине наличия какого-либо препятствия. (отсутствует требуемая информация, имеется блокирующая ошибка, мешающая продолжить тестирование, отсутствие необходимого оборудования или инструментария, недостаточная квалификация персонала и т. п.)

7. Эвристика «освежающей паузы». Вместо прекращения тестирования, мы приостанавливаем его на некоторое время. Нам требуется определенный перерыв, после которого мы сможем вернуться к продукту со свежим взглядом или свежими мыслями.

8. Эвристика «отсутствие продвижения». Чтобы бы мы не делали, мы получаем тот же самый результат.

9. Эвристика «привычное завершение». Мы останавливаем тестирование тогда, когда мы обычно останавливаем тестирование.

10. Больше нет интересных вопросов. В этот момент мы решаем, что не осталось вопросов, ответы на которые были бы достаточно ценными, чтобы оправдать стоимость продолжения тестирования, и поэтому мы останавливаем тестирование.

11. Эвристика уклонения/безразличия. Иногда людей не интересует дополнительная информация, либо они не хотят знать, что происходит в программе.

    • Какие знаете цели тестирования ПО?
1. Проверить, что тестируемое ПО будет работать правильно при любых обстоятельствах.
2. Проверить, что тестируемое ПО будет соответствовать всем описанным требованиям.
3. Предоставление актуальной информации о состоянии ПО в момент тестирования.

    • Quality Assurance – это?
Quality Assurance – это обеспечение качества, совокупность мероприятий, охватывающих все технологические этапы разработки, выпуска и эксплуатации ПО  информационных систем, предпринимаемых на разных стадиях жизненного цикла ПО, для обеспечения требуемого уровня качества выпускаемого продукта. Затрагивает все этапы SDLC от описания самого продукта до тестирования. QA – самое обширное понятие, включающее в себя планирование создания качественного продукта. Включает в себя QC.

    • Quality Control – это?
Quality Control – это контроль качества, это совокупность действий, проводимых над продуктом в процессе разработки, для получения информации об его актуальном состоянии в разрезах: «готовность продукта к выпуску», «соответствие зафиксированным требованиям», «соответствие заявленному уровню качества продукта». QC – осуществляет контроль за созданием качественного продукта. Включает в себя тестирование.

    • Тестирование – это?
Тестирование - это уже непосредственно процесс проверки результатов работы на соответствие установленным требованиям, т.е. конкретные действия по проверке качества продукта.

    • Какие знаете принципы тестирования?
1. тестирование демонстрирует наличие дефектов
2. исчерпывающее тестирование невозможно
3. ранее тестирование экономит время и деньги
4. скопление (кластеризация) дефектов
5. эффект пестицида (актуализация тест кейсов)
6. тестирование зависит от контекста
7. заблуждение об отсутствии ошибок

    • Что такое верификация?
Верификация – это процесс подтверждения соответствия конечного продукта определенным эталонным требованиям (проверка процесса, статическая). 
Правильно ли мы делаем продукт?

    • Что такое валидация?
Валидация - процесс подтверждения соответствия конечного продукта нуждам пользователя и возможность его применения для конкретных задач. (проверка результата, динамическая проверка с запуском кода). Правильный ли продукт мы делаем?

    • Перечислите характеристики качества ПО и их атрибуты. 
Характеристики качества ПО: 

Функциональность:
    • Корректность (correctness). Насколько правильно программа выполняет заданные функции. 
    • Целостность (integrity). Целостность связана с защитой данных и функций программы от несанкционированных изменений. 
    • Интероперабельность (interoperability). Этот атрибут оценивает способность программы взаимодействовать с другими системами и программами. 
    • Полнота (completeness). Полнота обозначает способность программы предоставлять все функции, заявленные в требованиях. 
    
Надежность:
    • Доступность (availability). Этот атрибут измеряет время, в течение которого система доступна для использования. Надежная система должна иметь высокую доступность, чтобы минимизировать простой. 
    • Устойчивость (fault tolerance). Устойчивость оценивает способность программы восстанавливаться после сбоев и неполадок.
    • Предсказуемость (predictability).
    
Эффективность:
    • Эффективность использования ресурсов (resource utilization). Этот атрибут оценивает, насколько эффективно программа использует ресурсы, такие как память, процессорное время и сетевая пропускная способность. Высокая эффективность обеспечивает оптимальное использование ресурсов. 
    • Время отклика (response time). Время отклика измеряет, сколько времени требуется программе для реагирования на запросы пользователя. 
    • Пропускная способность (throughput). Определяет, сколько операций программа может обработать за единицу времени. Высокая ПС важна для приложений с большой нагрузкой. 
    
Безопасность: 
    • Конфиденциальность (Confidentiality). Оценивает способность программы защищать конфиденциальные данные от несанкционированного доступа. 
    • Целостность (integrity). Способность ПО обеспечивать целостность данных и защищать их от несанкционированных изменений. 
    • Доступность (availability). Способность ПО оставаться доступным даже при атаках и сбоях.
    
Удобство использования: 
    • Понимаемость (understability). Оценивает насколько легко пользователи могут понять, как использовать программу. 
    • Простота обучения (learnability). Связан с легкостью освоения программы новыми пользователями.
    • Ориентация на пользователя (user-centered design). Удовлетворение потребностей и ожиданий пользователей является ключевой составляющей удобства использования.
    
Поддерживаемость и сопровождаемость:
    • Модульность (modularity). Оценивает способность программы быть разбитой на отдельные модули, что облегчает сопровождение и поддержку. 
    • Изменяемость (changeability). Определяет насколько легко программа может подвергаться изменениям без существенных нарушений работы. 
    • Документация (documentation). Наличие подробной и актуальной документации для пользователей и разработчиков оказывает значительное влияние на поддерживаемость и сопровождаемость программы.
    
Совместимость: 
    • Совместимость с платформами (platform compatibility).
    • Совместимость с браузерами (browser compatibility).
    • Совместимость с операционными системами (operating system compatibility).

